---
name: "Docker Push"

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

jobs:
  push:
    name: "Docker Push"
    runs-on: "ubuntu-latest"
    permissions:
      packages: "write"
      contents: "read"
    strategy:
      matrix:
        target:
          - "aarch64-unknown-linux-gnu"
          - "armv7-unknown-linux-gnueabihf"
          - "x86_64-unknown-linux-gnu"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 1

      - name: "Target Cache"
        uses: "actions/cache@v3"
        with:
          path: "target"
          key: "stable-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('Cargo.lock') }}"

      - name: "Install Rust Toolchain"
        uses: "actions-rs/toolchain@v1"
        with:
          override: true
          profile: "minimal"
          target: "${{ matrix.target }}"
          toolchain: "stable"

      - name: "Build"
        uses: "actions-rs/cargo@v1"
        with:
          command: "build"
          use-cross: true
          args: >-
            --release
            --target ${{ matrix.target }}

      - name: "Create Image"
        id: "image"
        env:
          IMAGE_NAME: "docker-mdns"
        run: |
          ARCH_NAME="$(echo "${{ matrix.target }}" | cut -d"-" -f1)"

          # Fix up the arch name if we're on an x86_64 target.
          if [ "${ARCH_NAME}" == "x86_64" ]; then
            ARCH_NAME="amd64"
          fi

          # This should just build the image right away, cross has already
          # built our binary above.
          make image${ARCH_NAME}

          echo "::set-output name=arch_name::${ARCH_NAME}"
          echo "::set-output name=base_image_name::${IMAGE_NAME}"
          echo "::set-output name=image_name::${IMAGE_NAME}:${ARCH_NAME}"

      - name: "Registry Login"
        run: |
          docker login ghcr.io \
            --username "${{ github.actor }}" \
            --password-stdin \
            <<< ${{ secrets.GITHUB_TOKEN }}

      - name: "Push Image"
        run: |
          ARCH_NAME="${{ steps.image.outputs.arch_name }}"
          BASE_IMAGE_NAME="${{ steps.image.outputs.base_image_name }}"
          IMAGE_NAME="${{ steps.image.outputs.image_name }}"
          IMAGE_ID="ghcr.io/${{ github.repository_owner }}/${BASE_IMAGE_NAME}"
          IMAGE_ID="$(echo ${IMAGE_ID} | tr '[A-Z]' '[a-z]')"
          VERSION="$(echo "${{ github.ref }}" | sed 's#.*/\(.*\)#\1#')"

          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            VERSION="$(echo "${VERSION}" | sed -e 's/^v//')"
          fi

          if [ "${VERSION}" == "main" ]; then
            VERSION="${ARCH_NAME}-latest"
          fi

          echo IMAGE_ID="${IMAGE_ID}"
          echo VERSION="${VERSION}"

          # Tag
          echo "Tagging"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${ARCH_NAME}"
          docker tag "${IMAGE_NAME}" "${IMAGE_ID}:${VERSION}"

          # Push
          echo "Pushing"
          docker push "${IMAGE_ID}:${ARCH_NAME}"
          docker push "${IMAGE_ID}:${VERSION}"
